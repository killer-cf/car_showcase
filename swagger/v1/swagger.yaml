---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/brands":
    parameters:
    - name: authorization
      in: header
      default: Bearer <token>
      schema:
        type: string
    get:
      summary: list brands
      tags:
      - Brands
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example_key:
                  value:
                    brands:
                    - id: 1
                      name: Ford
                      created_at: '2021-08-10T00:00:00.000Z'
                      updated_at: '2021-08-10T00:00:00.000Z'
                    - id: 2
                      name: Fiat
                      created_at: '2021-08-10T00:00:00.000Z'
                      updated_at: '2021-08-10T00:00:00.000Z'
        '401':
          description: unauthorized
        '403':
          description: forbidden
    post:
      summary: Creates a brand
      tags:
      - Brands
      parameters: []
      responses:
        '201':
          description: brand created
        '401':
          description: unauthorized
        '403':
          description: forbidden
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
            examples:
              '201':
                summary: 201_response
                value:
                  name: Ford
  "/api/v1/brands/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: authorization
      in: header
      default: Bearer <token>
      schema:
        type: string
    get:
      summary: show brand
      tags:
      - Brands
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example_key:
                  value:
                    brand:
                      id: 1
                      name: Ford
                      created_at: '2021-08-10T00:00:00.000Z'
                      updated_at: '2021-08-10T00:00:00.000Z'
        '401':
          description: unauthorized
        '403':
          description: forbidden
    put:
      summary: update brand
      tags:
      - Brands
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: successful
        '401':
          description: unauthorized
        '403':
          description: forbidden
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: delete brand
      tags:
      - Brands
      responses:
        '204':
          description: successful
        '401':
          description: unauthorized
        '403':
          description: forbidden
  "/api/v1/cars":
    get:
      summary: list cars
      tags:
      - Cars
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example_key:
                  value:
                    cars:
                    - id: kkf9cfdc-b795-45af-9f44-4f017ab105c3
                      name: Ford Focus
                      year: 2022
                      created_at: '2021-08-10T00:00:00.000Z'
                      updated_at: '2021-08-10T00:00:00.000Z'
                      brand_id: kkf9cfdc-b795-45af-9f44-4f017ab105c3
                      model_id: kkf9cfdc-b795-45af-9f44-4f017ab105c3
                    - id: kkf9cfdc-b795-45af-9f44-4f017ab105c3
                      name: Fiat Uno
                      year: 2022
                      created_at: '2021-08-10T00:00:00.000Z'
                      updated_at: '2021-08-10T00:00:00.000Z'
                      brand_id: jjf9cfdc-b795-45af-9f44-4f017ab105c3
                      model_id: hhf9cfdc-b795-45af-9f44-4f017ab105c3
  "/api/v1/cars/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: Authorization
      in: header
      default: Bearer <token>
      schema:
        type: string
    get:
      summary: show car
      tags:
      - Cars
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example_key:
                  value:
                    id: kkf9cfdc-b795-45af-9f44-4f017ab105c3
                    name: Ford Focus 2018
                    year: 2022
                    brand: Ford
                    created_at: '2021-08-10T00:00:00.000Z'
                    model: Focus
    put:
      summary: update car
      tags:
      - Cars
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                year:
                  type: integer
                status:
                  type: integer
                brand_id:
                  type: integer
                model_id:
                  type: integer
              required:
              - name
              - year
              - status
              - brand_id
              - model_id
    delete:
      summary: delete car
      tags:
      - Cars
      responses:
        '204':
          description: successful
  "/api/v1/stores/{store_id}/cars":
    post:
      summary: create car
      tags:
      - Cars
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        default: Bearer <token>
        schema:
          type: string
      responses:
        '201':
          description: car created
        '422':
          description: invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                year:
                  type: integer
                status:
                  type: integer
                brand_id:
                  type: integer
                model_id:
                  type: integer
                images:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
              - name
              - year
              - status
              - brand_id
              - model_id
              - images
  "/api/v1/cars/{id}/activate":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: Authorization
      in: header
      default: Bearer <token>
      schema:
        type: string
    patch:
      summary: activate car
      tags:
      - Cars
      responses:
        '204':
          description: successful
  "/api/v1/cars/{id}/sell":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: Authorization
      in: header
      default: Bearer <token>
      schema:
        type: string
    patch:
      summary: sell car
      tags:
      - Cars
      responses:
        '204':
          description: successful
  "/api/v1/models":
    get:
      summary: list models
      tags:
      - Models
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example_key:
                  value:
                  - id: ddf9cfdc-b795-45af-9f44-4f017ab105c3
                    name: Mustang
                    brand_id: kkf9cfdc-b795-45af-9f44-4f017ab105c3
                    created_at: '2021-08-10T00:00:00.000Z'
                    updated_at: '2021-08-10T00:00:00.000Z'
                  - id: tff9cfdc-b795-45af-9f44-4f017ab105c3
                    name: Maverick
                    brand_id: kkf9cfdc-b795-45af-9f44-4f017ab105c3
                    created_at: '2021-08-10T00:00:00.000Z'
                    updated_at: '2021-08-10T00:00:00.000Z'
    post:
      summary: Creates a model
      tags:
      - Models
      parameters: []
      responses:
        '201':
          description: model created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                brand_id:
                  type: string
              required:
              - name
              - brand_id
            examples:
              '201':
                summary: 201_response
                value:
                  name: Mustang
                  brand_id: kkf9cfdc-b795-45af-9f44-4f017ab105c3
  "/api/v1/models/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show model
      tags:
      - Models
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example_key:
                  value:
                    id: ddf9cfdc-b795-45af-9f44-4f017ab105c3
                    name: Mustang
                    brand_id: kkf9cfdc-b795-45af-9f44-4f017ab105c3
                    created_at: '2021-08-10T00:00:00.000Z'
                    updated_at: '2021-08-10T00:00:00.000Z'
    put:
      summary: update model
      tags:
      - Models
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                brand_id:
                  type: string
              required:
              - name
              - brand_id
    delete:
      summary: delete model
      tags:
      - Models
      responses:
        '204':
          description: successful
  "/api/v1/users":
    get:
      summary: list users
      tags:
      - Users
      responses:
        '200':
          description: successful
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                tax_id:
                  type: string
                email:
                  type: string
                avatar:
                  type: string
                  format: binary
              required:
              - name
              - tax_id
              - email
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example_key:
                  value:
                    id: string-uuid
                    name: Kilder
                    tax_id: 31.576.685/0001-42
    put:
      summary: update user
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                tax_id:
                  type: string
              required:
              - name
              - tax_id
    delete:
      summary: delete user
      tags:
      - Users
      responses:
        '204':
          description: successful
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
